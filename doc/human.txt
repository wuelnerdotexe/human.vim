*human.txt* Collection of vim default options for humans.

To use this plugin you just have to install it, and you will start to notice
small changes in Vim that will make more sense.

=============================================================================

1. Options                                                    *human-options*

To see the many options contained in this plugin, look directly at the source
code in the `plugin/human.vim` directory, where all the options are nicely
organized.

If you need to change the value of an option contained in this plugin, you
must do so after loading the plugin; for which you will need to create an
automatic command `autocmd VimEnter * set {option}` in your `VIMRC` file, or
normally rewrite `set {option}` your options to a file in the
`after /plugin/` directory.

Warning: Otherwise, your options value will be changed to Vim for Humans.

If you need to change the value of an option contained in this plugin, you
must do so after loading the plugin in your `VIMRC` file or in a separate
file in the `after/plugin/` folder, if you do it before, your options will
be rewritten. Learn about the options in the `plugin/human.vim` source code.

=============================================================================

2. Mappings                                                  *human-mappings*

Vim for Humans creates key mappings to navigate between buffers, following
the same Vim philosophy for navigating between tabs.

In addition, a key mapping `CTRL + L` in normal mode is also included to hide
the highlight as a result of having the `hlsearch` option enabled when
performing a search. This mapping is created only for Vim, because in Neovim
it is already included by default.

The "smart" mappings for buffers are:

2.1. Normal mode

- Use `gB` for previous buffer.
- Use `gb` for next buffer.

2.2. Insert and visual mode

- Use `Shift + Page Down` for previous buffer.
- Use `Shift + Page Up` for next buffer.

=============================================================================

3. Plugins                                                    *human-plugins*

It also includes minimalistic and modernized plugins with on-demand functions
to further enhance the human experience. It seems that these plugins are no
longer maintained by their author, so I've included them here.

The plugins included are:

3.1. Maximizer

Maximizer lets you maximize split windows and restore them automatically.
It is very useful if you like to have many split windows per tab.

Maximizer has only one command:

`:MaximizerToggle`

Which you can map to your favorite map, for example:

`nmap <leader>mt <Plug>(MaximizerToggle)`
`nmap! <leader>mt <Plug>(MaximizerToggle)`

When the current window is not in maximized state, Maximizer saves dimensions
and positions of all windows in the current tab, and then it performs
maximization of the active window. The second time the command is invoked,
Maximizer restores all windows to the previously saved positions.

vim:textwidth=78:tabstop=8:filetype=help:
